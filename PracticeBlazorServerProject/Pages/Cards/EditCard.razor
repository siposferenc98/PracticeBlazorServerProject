@page "/cards/edit/{Id}"
@inject EventsBoxDbContext _context

<PageTitle>Editing: @_title</PageTitle>

@if(_cardToEdit is not null)
{
    <div class="d-flex flex-fill p-3">
        <EditForm Model=@_cardToEdit>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Title: </label>
                <CustomTextInput @bind-Value=@_cardToEdit.Title placeholder="Title"></CustomTextInput>
            </div>
            <div class="form-group">
                <label>Address: </label>
                <CustomTextInput @bind-Value=@_cardToEdit.Location placeholder="Address"></CustomTextInput>
            </div>
            <CustomButton Text="Send" Type="submit"></CustomButton>
        </EditForm>
    </div>
}



@code {
    private string _title;
    private Card? _cardToEdit = new();
    private List<Card> _listOfCards = new();
    [Parameter]
    public string Id{ get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _listOfCards = await _context.Cards.ToListAsync();
            _cardToEdit = _listOfCards.FirstOrDefault(x => x.Id.ToString() == Id);
            _title = _cardToEdit?.Title ?? "Card not found!";
            StateHasChanged();
        }
    }

}
